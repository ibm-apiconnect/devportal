<div class="apicAppCredentials">
  {% if userHasAppManage %}
    {% set initialCredentials = node.credentials|first %}
    <div class="applicationCredentials pwd-see">
      <div class="credentialsTable">
        <div class="credentialsHeader">
          <div class="credentialsPreamble">
              <div class="credentialsTitle">{{ 'Credentials'|t }}</div>
              {% if events_found %}
              <div class="credentialsUsage">{{ 'Application credentials are used when an API requires authentication. Depending on its use, it can be referred to as API key and secret in a HTTP authentication header, Client ID and secret in an OAuth flow or Kafka SASL username and password.'|t }}</div>
              {% endif %}
          </div>
          <div class="credentialsActions">
            {% if allowNewCredentials %}
            <div class="credentialsActionsAdd">
              <a class="addCredential button bx--btn--tertiary btn btn-sm" title="{{ 'Add'|t }}" href="{{- path('apic_app.credentials_create', {'appId': node.application_id.value}) -}}">
                {{ 'Add'|t }}
              </a>
            </div>
            {% endif %}
            <div class="credentialsActionsManage">
              <ul class="overflow-menu credentialsMenu dropitmenu">
                <li title="{{ 'Manage credentials'|t }}">
                  <a href="#" class="trigger">
                        <span class="dropit-icon">
                            <svg version="1.1" id="icon" xmlns="http://www.w3.org/2000/svg"
                                xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                width="32px" height="32px" viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;"
                                xml:space="preserve">
                              <style type="text/css">.st0 {
                                  fill: none;
                                }</style>
                              <title>overflow-menu--vertical</title>
                              <circle cx="16" cy="8" r="2"/>
                              <circle cx="16" cy="16" r="2"/>
                              <circle cx="16" cy="24" r="2"/>
                              <rect id="_Transparent_Rectangle_" class="st0" width="32" height="32"/>
                            </svg>
                        </span>
                  </a>
                  {% if initialCredentials.uuid is defined and initialCredentials.uuid is not null %}
                    <ul class="dropitmenu-submenu">
                      <li class="editCredentials"><a
                            href="{{ path('apic_app.credentials_update', {'appId': node.application_id.value, 'credId': initialCredentials.uuid}) }}"
                            title="{{ 'Edit Credentials'|t }}">{{ 'Edit'|t }}</a>
                      </li>
                      {% if allowClientidReset %}
                        <li class="resetClientID"><a
                              href="{{ path('apic_app.reset_clientid', {'appId': node.application_id.value, 'credId': initialCredentials.uuid}) }}"
                              title="{{ 'Reset Credentials'|t }}">{{ 'Reset Credentials'|t }}</a>
                        </li>
                      {% endif %}
                      {% if allowClientsecretReset %}
                        <li class="resetClientSecret"><a
                              href="{{ path('apic_app.reset_clientsecret', {'appId': node.application_id.value, 'credId': initialCredentials.uuid}) }}"
                              title="{{ 'Reset API Secret'|t }}">{{ 'Reset API Secret'|t }}</a>
                        </li>
                      {% endif %}
                      {% if node.credentials|length > 1 %}
                        <li class="deleteCredentials"><a
                              href="{{ path('apic_app.credentials_delete', {'appId': node.application_id.value, 'credId': initialCredentials.uuid}) }}"
                              title="{{ 'Delete Credentials'|t }}">{{ 'Delete'|t }}</a>
                        </li>
                      {% endif %}
                    </ul>
                  {% endif %}
                </li>
              </ul>
            </div>
          </div>
        </div>
        <div class="credentialsContent">
          <div class="credentialsTabs">
            <ul>
              {% for cred in node.credentials %}
                <li {% if cred.uuid == initialCredentials.uuid %} class="selected" {% endif %} {% if cred.summary is defined and cred.summary is not null %} data-credsummary="{{ cred.summary }}" {% endif %}
                    data-credid="{{ cred.uuid }}"><a {% if cred.title %} title="{{ cred.title }}"{% endif %}
                      href="#">{% if cred.title and cred.title != cred.uuid %}{{ cred.title }}{% else %}{{ 'Default credentials'|t }}{% endif %}</a>
                </li>
              {% endfor %}
            </ul>
          </div>
          <div class="credentialsData">
            {% if initialCredentials.summary is defined and initialCredentials.summary is not null and initialCredentials.summary != initialCredentials.title %}
              <div class="credentialSummary">{{ initialCredentials.summary }}</div>
            {% else %}
              <div class="credentialSummary hidden"></div>
            {% endif %}
            <div class="clientIDContainer form-item">
              <label class="field__label" id="clientIDInputLabel">{{ 'API Key'|t }}</label>
              {% if clipboard.enabled %}
                <input id="clientIDInput" class="clipboardjs password-field passwordCreds" type="password"
                       aria-labelledby="clientIDInputLabel"
                       value="{{- initialCredentials['client_id'] -}}"/>
                <div id="hiddenClientIDInput" class="offscreen-field">{{- initialCredentials['client_id'] -}}</div>
                <button class="clipboardjs-button" type="button" data-clipboard-alert="tooltip"
                        data-clipboard-alert-text="{{ 'Copied successfully'|t }}"
                        data-clipboard-target="#hiddenClientIDInput">
                  {% include clipboard.image_path ~ '/images/clipboard.svg' %}
                </button>
              {% else %}
                <div
                    class="bx--form-item js-form-item form-item js-form-type-textfield form-type-password js-form-item-password form-item-password form-group">
                  <input class="form-control" id="clientIDInput" aria-labelledby="clientIDInputLabel"
                         value="{{- initialCredentials['client_id'] -}}" readonly/>
                </div>
              {% endif %}
            </div>
            <div class="clientSecretContainer">
              <label class="field__label">{{ 'API Secret'|t }}</label>
              <div
                  class="bx--form-item js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-textfield form-item-textfield form-group">
                {% if initialCredentials.uuid is defined and initialCredentials.uuid is not null %}
                  <div class="apicAppCheckButton verifyButton">
                    <a class="button bx--btn--tertiary btn btn-sm"
                       href="{{ path('apic_app.verify_clientsecret', {'appId': node.application_id.value, 'credId': initialCredentials.uuid}) }}">{{ 'Verify'|t }}</a>
                  </div>
                {% endif %}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  {% endif %}
</div>
