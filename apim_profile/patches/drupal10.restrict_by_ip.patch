diff --git modules/restrict_by_ip/restrict_by_ip.info.yml modules/restrict_by_ip/restrict_by_ip.info.yml
index 63ab66a..e21831f 100644
--- modules/restrict_by_ip/restrict_by_ip.info.yml
+++ modules/restrict_by_ip/restrict_by_ip.info.yml
@@ -2,5 +2,5 @@ name: Restrict By IP
 description: Enables limiting user login and role access to specific IP Addresses.
 type: module
 package: Access control
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: restrict_by_ip.general_settings

diff --git modules/restrict_by_ip/src/EventSubscriber/FirewallSubscriber.php modules/restrict_by_ip/src/EventSubscriber/FirewallSubscriber.php
index c307c66..c5f8b8f 100644
--- modules/restrict_by_ip/src/EventSubscriber/FirewallSubscriber.php
+++ modules/restrict_by_ip/src/EventSubscriber/FirewallSubscriber.php
@@ -2,10 +2,10 @@

 namespace Drupal\restrict_by_ip\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\restrict_by_ip\LoginFirewallInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;

 /**
  * Triggers the restrict by IP login firewall.
@@ -51,10 +51,10 @@ class FirewallSubscriber implements EventSubscriberInterface {
   /**
    * This method is called whenever the kernel.request event is dispatched.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event.
    */
-  public function loginFirewall(GetResponseEvent $event) {
+  public function loginFirewall(RequestEvent $event) {
     $this->loginFirewall->execute($this->currentUser);
   }

diff --git modules/restrict_by_ip/src/Form/UserSettingsForm.php modules/restrict_by_ip/src/Form/UserSettingsForm.php
index 738514e..78e09e1 100644
--- modules/restrict_by_ip/src/Form/UserSettingsForm.php
+++ modules/restrict_by_ip/src/Form/UserSettingsForm.php
@@ -2,6 +2,7 @@

 namespace Drupal\restrict_by_ip\Form;

+use Drupal\user\Entity\User;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -67,7 +68,7 @@ class UserSettingsForm extends ConfigFormBase {

     // Current restrictions.
     foreach ($config->get('user') as $key => $value) {
-      $account = \Drupal\user\Entity\User::load($key);
+      $account = User::load($key);
       $form['restrict_by_ip_user_' . $key] = [
         '#type' => 'textfield',
         '#title' => $this->t('@name user IP range', ['@name' => $account->label()]),
diff --git modules/restrict_by_ip/tests/src/Functional/RedirectTest.php modules/restrict_by_ip/tests/src/Functional/RedirectTest.php
index 347a10a..3eee954 100644
--- modules/restrict_by_ip/tests/src/Functional/RedirectTest.php
+++ modules/restrict_by_ip/tests/src/Functional/RedirectTest.php
@@ -23,7 +23,7 @@ class RedirectTest extends RestrictByIPWebTestBase {
    *
    * @var array
    */
-  public static $modules = [
+  protected static $modules = [
     'restrict_by_ip',
     'node',
   ];
@@ -31,7 +31,7 @@ class RedirectTest extends RestrictByIPWebTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create a page users will get redirected to when denied login.
diff --git modules/restrict_by_ip/tests/src/Functional/RestrictByIPWebTestBase.php modules/restrict_by_ip/tests/src/Functional/RestrictByIPWebTestBase.php
index aaf8947..e83ce11 100644
--- modules/restrict_by_ip/tests/src/Functional/RestrictByIPWebTestBase.php
+++ modules/restrict_by_ip/tests/src/Functional/RestrictByIPWebTestBase.php
@@ -56,7 +56,7 @@ abstract class RestrictByIPWebTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable modules needed for these tests.
     parent::setUp();

diff --git modules/restrict_by_ip/tests/src/Functional/RoleTest.php modules/restrict_by_ip/tests/src/Functional/RoleTest.php
index a2cd212..b35191e 100644
--- modules/restrict_by_ip/tests/src/Functional/RoleTest.php
+++ modules/restrict_by_ip/tests/src/Functional/RoleTest.php
@@ -21,7 +21,7 @@ class RoleTest extends RestrictByIPWebTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create a role with administer permissions so we can load the user edit,
diff --git modules/restrict_by_ip/tests/src/Functional/UiTest.php modules/restrict_by_ip/tests/src/Functional/UiTest.php
index d2c8c06..c8d012e 100644
--- modules/restrict_by_ip/tests/src/Functional/UiTest.php
+++ modules/restrict_by_ip/tests/src/Functional/UiTest.php
@@ -19,7 +19,7 @@ class UiTest extends RestrictByIPWebTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable modules needed for these tests.
     parent::setUp();

--- modules/restrict_by_ip/src/RoleFirewall.php		2024-02-12 13:11:05
+++ modules/restrict_by_ip/src/RoleFirewall.php		2024-02-09 17:04:14
@@ -50,13 +50,17 @@

       $ranges = explode(';', $role_data);

+      $valid = true;
       foreach ($ranges as $range) {
         try {
           $this->ipTools->validateCIDR($user_ip, $range);
         } catch (IPOutOfRangeException $e) {
-          $remove_roles[] = $name;
+          $valid = false;
         }
       }
+      if (!$valid) {
+        $remove_roles[] = $name;
+      }
     }

     return $remove_roles;

--- modules/restrict_by_ip/restrict_by_ip.services.yml  2022-12-19 10:05:18
+++ modules/restrict_by_ip/restrict_by_ip.services.yml     2022-12-19 10:05:43
@@ -12,4 +12,10 @@
       - { name: event_subscriber }
   restrict_by_ip.role_firewall:
       class: Drupal\restrict_by_ip\RoleFirewall
-      arguments: ["@restrict_by_ip.ip_tools","@config.factory","@entity_type.manager"]
\ No newline at end of file
+      arguments: ["@restrict_by_ip.ip_tools","@config.factory","@entity_type.manager"]
+  restrict_by_ip.current_user:
+    class: Drupal\Core\Session\AccountProxy
+    arguments: ['@event_dispatcher']
+  current_user:
+    class: Drupal\restrict_by_ip\Session\AccountProxy
+    arguments: ['@restrict_by_ip.current_user', '@restrict_by_ip.role_firewall']

--- modules/restrict_by_ip/src/RestrictByIpServiceProvider.php  2022-12-19 09:50:51
+++ /dev/null   2022-12-19 10:07:18
@@ -1,35 +0,0 @@
-<?php
-
-/**
- * @file
- * Contains Drupal\restrict_by_ip\RestrictByIpServiceProvider
- */
-
-namespace Drupal\restrict_by_ip;
-
-use Symfony\Component\DependencyInjection\Definition;
-use Symfony\Component\DependencyInjection\Reference;
-use Drupal\Core\DependencyInjection\ServiceProviderBase;
-use Drupal\Core\DependencyInjection\ContainerBuilder;
-
-/**
- * Rename current_user service and replace with one provided by restrict_by_ip
- * module.
- */
-class RestrictByIpServiceProvider extends ServiceProviderBase {
-
-  /**
-   * {@inheritdoc}
-   */
-  public function alter(ContainerBuilder $container) {
-    // Rename current_user service.
-    $coreService = $container->getDefinition('current_user');
-    $container->setDefinition('restrict_by_ip.current_user', $coreService);
-
-    // Register this modules class as default for current_user service.
-    $newService = new Definition('Drupal\restrict_by_ip\Session\AccountProxy');
-    $newService->addArgument(new Reference('restrict_by_ip.current_user'));
-    $newService->addArgument(new Reference('restrict_by_ip.role_firewall'));
-    $container->setDefinition('current_user', $newService);
-  }
-}
\ No newline at end of file
