--- modules/password_policy/password_policy.module	2022-09-28 14:55:28.000000000 +0100
+++ modules/password_policy/password_policy.module	2022-09-29 14:35:00.000000000 +0100
@@ -9,6 +9,8 @@
 use Drupal\password_policy\Entity\PasswordPolicy;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
+use Drupal\user\Entity\User;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\user\UserInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;
@@ -212,17 +214,25 @@
   $roles = _password_policy_get_edited_user_roles($form, $form_state);

   $user = $form_state->getFormObject()->getEntity();
-  $user->setUsername($form_state->getValue('name', ''));
-  /** @var \Drupal\password_policy\PasswordPolicyValidationReport $validationReport */
-  $validationReport = \Drupal::service('password_policy.validator')->validatePassword(
-    $form_state->getValue('pass', ''),
-    $user,
-    $roles
-  );
-
-  if ($validationReport->isInvalid()) {
-    $form_state->setErrorByName('pass', t('The password does not satisfy the password policies.'));
-    $form_state->setError($form, $validationReport->getErrors());
+  if ($user instanceof User && $user->isNew()) {
+    $user->setUsername($form_state->getValue('name', ''));
+  }
+
+  if ($user instanceof AccountProxyInterface) {
+    $user = User::load($user->id());
+  }
+
+  if (!empty($form_state->getValue('pass')) && empty($form_state->getValue('pw_no_policy'))) {
+    $validationReport = \Drupal::service('password_policy.validator')->validatePassword(
+        $form_state->getValue('pass', ''),
+        $user,
+        $roles
+    );
+
+    if ($validationReport->isInvalid()) {
+        $form_state->setErrorByName('pass', t('The password does not satisfy the password policies.'));
+        $form_state->setError($form, $validationReport->getErrors());
+    }
   }
 }

@@ -233,7 +243,13 @@
   $roles = $form_state->getValue('roles');
   if (empty($roles)) {
     // Get if from $form; form state is always empty the first time.
-    $roles = $form['account']['roles']['#default_value'];
+    if(isset($form['roles']['#default_value'])) {
+      $roles = $form['roles']['#default_value'];
+    } else if(isset($form['account']['roles']['#default_value'])) {
+      $roles = $form['account']['roles']['#default_value'];
+    } else {
+      $roles = [];
+    }
   }
   $roles = (is_array($roles)) ? array_combine($roles, $roles) : [$roles];
