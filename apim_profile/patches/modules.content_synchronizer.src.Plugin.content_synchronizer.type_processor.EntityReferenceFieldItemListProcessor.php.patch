--- modules/content_synchronizer/src/Plugin/content_synchronizer/type_processor/EntityReferenceFieldItemListProcessor.php       2023-07-03 16:41:58
+++ modules/content_synchronizer/src/Plugin/content_synchronizer/type_processor/EntityReferenceFieldItemListProcessor.php  2023-09-08 15:14:31
@@ -29,6 +29,13 @@
   protected static array $dependenciesBuffer = [];

   /**
+   * The APIs Taxonomy ID.
+   *
+   * @var string
+   */
+  protected string $apisTaxonomyID;
+
+  /**
    * {@inheritdoc}
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition) {
@@ -63,6 +70,12 @@

     /** @var \Drupal\Core\Entity\EntityInterface $entity */
     foreach ($property_data->referencedEntities() as $entity) {
+      if($this->isBlocked($entity->getEntityTypeId()) || $this->isBlocked($entity->bundle())) {
+        continue;
+      }
+      if(($entity->getEntityTypeId() == 'taxonomy_term' && $this->isBlockedTaxonomyTerm($entity->id())) || ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'forum' && $this->isBlockedTaxonomyTerm($entity->get('taxonomy_forums')->getString()))) {
+        continue;
+      }
       /** @var \Drupal\content_synchronizer\Processors\Entity\EntityProcessorBase $plugin */
       $plugin = $entity_processor_manager->getInstanceByEntityType($entity->getEntityTypeId());
       if (get_class($entity) != "Drupal\user\Entity\User") {
@@ -76,6 +89,34 @@
     return $data;
   }

+  public function isBlocked(string $entity): bool {
+    $blockedTypes = [ "crop", "user", "api", "application", "consumerorg", "product", "event_log", "consumerorg_payment_method", "apic_app_application_subs",
+                  "apic_app_application_creds", "avatars_preview", "comment", "contact_message", "search_api_task", "vote", "vote_result" ];
+    return in_array($entity, $blockedTypes);
+  }
+
+  public function isBlockedTaxonomyTerm(string $taxonomyID): bool {
+    if (empty($this->apisTaxonomyID)) {
+      $result = \Drupal::entityQuery('taxonomy_term')
+            ->condition('name', 'APIs')
+            ->condition('parent', 'forums')
+            ->accessCheck()
+            ->execute();
+      $this->apisTaxonomyID = !empty($result) ? array_shift($result) : '';
+    }
+
+    if (!empty($this->apisTaxonomyID)) {
+      return empty(\Drupal::entityQuery('taxonomy_term')
+      ->condition('tid', $this->apisTaxonomyID, 'NOT IN')
+      ->condition('tid', $taxonomyID)
+      ->condition('parent', $this->apisTaxonomyID, 'NOT IN')
+      ->accessCheck()
+      ->execute());
+    }
+
+    return false;
+  }
+
   /**
    * {@inheritdoc}
    */
