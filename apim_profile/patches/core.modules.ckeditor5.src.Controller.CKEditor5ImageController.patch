--- core/modules/ckeditor5/src/Controller/CKEditor5ImageController.php
+++ core/modules/ckeditor5/src/Controller/CKEditor5ImageController.php
@@ -9,6 +9,7 @@
 use Drupal\Component\Utility\Environment;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Controller\ControllerBase;
+use Drupal\Core\Entity\EntityConstraintViolationList;
 use Drupal\Core\File\Event\FileUploadSanitizeNameEvent;
 use Drupal\Core\File\Exception\FileException;
 use Drupal\Core\File\FileSystemInterface;
@@ -193,10 +194,10 @@
     $file->setFilename($prepared_filename);
     $file->setMimeType($this->mimeTypeGuesser->guessMimeType($prepared_filename));

-    $file->setFileUri($file_uri);
+    $file->setFileUri($temp_file_path);
     $file->setSize(@filesize($temp_file_path));

-    $violations = $this->validate($file, $validators);
+    $violations = $this->validate($file, $validators, $file_uri);
     if ($violations->count() > 0) {
       throw new UnprocessableEntityHttpException($violations->__toString());
     }
@@ -250,16 +251,20 @@
    * @return \Drupal\Core\Entity\EntityConstraintViolationListInterface
    *   The list of constraint violations, if any.
    */
-  protected function validate(FileInterface $file, array $validators) {
-    $violations = $file->validate();
-
-    // Remove violations of inaccessible fields as they cannot stem from our
-    // changes.
-    $violations->filterByFieldAccess();
+  protected function validate(FileInterface $file, array $validators, string $destinationFilename) {
+    $violations = new EntityConstraintViolationList($file, []);

     // Validate the file based on the field definition configuration.
     $violations->addAll($this->fileValidator->validate($file, $validators));
+    $file->setFileUri($destinationFilename);

+    $entity_violations = $file->validate();
+
+    // Remove violations of inaccessible fields as they cannot stem from our
+    // changes.
+    $entity_violations->filterByFieldAccess();
+
+    $violations->addAll($entity_violations);
     return $violations;
   }