--- modules/perimeter/src/EventSubscriber/PerimeterSubscriber.php       2022-12-09 16:55:00
+++ modules/perimeter/src/EventSubscriber/PerimeterSubscriber.php  2022-12-09 16:54:54
@@ -11,6 +11,7 @@
 use Drupal\ban\BanIpManager;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
+use Drupal\Core\Site\Settings;

 /**
  * On page not found events, ban the IP if the request is suspicious.
@@ -40,6 +41,10 @@
    * On page not found events, ban the IP if the request is suspicious.
    */
   public function handleBannedUrls(Event $event) {
+    $whitelist = Settings::get('reverse_proxy_addresses', []) ;
+    if (in_array($event->getRequest()->getClientIp(), $whitelist)){
+      return;
+    }
     if (\Drupal::currentUser()->hasPermission('bypass perimeter defence rules')) {
       return;
     }
@@ -47,7 +52,7 @@
     if ($exception instanceof NotFoundHttpException) {
       $request_path = $event->getRequest()->getPathInfo();
       $bannedPatterns = $this->configFactory->get('perimeter.settings')->get('not_found_exception_patterns');
-      if (!empty($bannedPatterns) && !empty($request_path)) {
+      if (!empty($bannedPatterns) && !empty($request_path) && (bool)\Drupal::state()->get('ibm_apim.ip_ban_enabled', true)) {
         foreach ($bannedPatterns as $pattern) {
           $pattern = trim($pattern);
           if (!empty($pattern) && preg_match($pattern, $request_path)) {