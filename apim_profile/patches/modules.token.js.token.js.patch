--- modules/token/js/token.js 2025-04-22 13:12:13
+++ modules/token/js/token.js 2025-04-22 13:12:16
@@ -13,6 +13,7 @@
     attach: function (context, settings) {
       // Keep track of which textfield was last selected/focused.
       $('textarea, input[type="text"]', context).focus(function () {
+        drupalSettings.tokenFocusedCkeditor5 = false;
         drupalSettings.tokenFocusedField = this;
       });
 
@@ -20,6 +21,7 @@
         Drupal.CKEditor5Instances.forEach(function (editor) {
           editor.editing.view.document.on('change:isFocused', (event, data, isFocused) => {
             if (isFocused) {
+              drupalSettings.tokenFocusedField = false;
               drupalSettings.tokenFocusedCkeditor5 = editor;
             }
           });
@@ -27,54 +29,60 @@
       }
 
       once('token-click-insert', '.token-click-insert .token-key', context).forEach(function (token) {
-        var newThis = $('<a href="javascript:void(0);" title="' + Drupal.t('Insert this token into your form') + '">' + $(token).html() + '</a>').click(function () {
-          var content = this.text;
-
-          // Always work in normal text areas that currently have focus.
-          if (drupalSettings.tokenFocusedField && (drupalSettings.tokenFocusedField.tokenDialogFocus || drupalSettings.tokenFocusedField.tokenHasFocus)) {
-            insertAtCursor(drupalSettings.tokenFocusedField, content);
-          }
-          // Direct tinyMCE support.
-          else if (typeof(tinyMCE) != 'undefined' && tinyMCE.activeEditor) {
-            tinyMCE.activeEditor.execCommand('mceInsertContent', false, content);
-          }
-          // Direct CKEditor support. Only works if the field currently has focus,
-          // which is unusual since the dialog is open.
-          else if (typeof(CKEDITOR) != 'undefined' && CKEDITOR.currentInstance) {
-            CKEDITOR.currentInstance.insertHtml(content);
-          }
-          // Direct CodeMirror support.
-          else if (typeof(CodeMirror) != 'undefined' && drupalSettings.tokenFocusedField && $(drupalSettings.tokenFocusedField).parents('.CodeMirror').length) {
-            var editor = $(drupalSettings.tokenFocusedField).parents('.CodeMirror')[0].CodeMirror;
-            editor.replaceSelection(content);
-            editor.focus();
-          }
-          // WYSIWYG support, should work in all editors if available.
-          else if (Drupal.wysiwyg && Drupal.wysiwyg.activeId) {
-            Drupal.wysiwyg.instances[Drupal.wysiwyg.activeId].insert(content)
-          }
-          // CKeditor module support.
-          else if (typeof(CKEDITOR) != 'undefined' && typeof(Drupal.ckeditorActiveId) != 'undefined') {
-            CKEDITOR.instances[Drupal.ckeditorActiveId].insertHtml(content);
-          }
-          else if (drupalSettings.tokenFocusedField) {
-            insertAtCursor(drupalSettings.tokenFocusedField, content);
-          }
-          else if (drupalSettings.tokenFocusedCkeditor5) {
-            const editor = drupalSettings.tokenFocusedCkeditor5;
-            editor.model.change((writer) => {
-              writer.insertText(
-                  content,
-                  editor.model.document.selection.getFirstPosition(),
-              );
-            })
-          }
-          else {
-            alert(Drupal.t('First click a text field to insert your tokens into.'));
-          }
-
-          return false;
-        });
+        const isHeaderColumn = $(token).hasClass('header-col');
+        var newThis
+        if (isHeaderColumn) {
+          newThis = '<span title="' + Drupal.t('Insert this token into your form') + '">' + $(token).html() + '</span>'
+        } else {
+          newThis = $('<a href="javascript:void(0);" title="' + Drupal.t('Insert this token into your form') + '">' + $(token).html() + '</a>').click(function () {
+            var content = this.text;
+  
+            // Always work in normal text areas that currently have focus.
+            if (drupalSettings.tokenFocusedField && (drupalSettings.tokenFocusedField.tokenDialogFocus || drupalSettings.tokenFocusedField.tokenHasFocus)) {
+              insertAtCursor(drupalSettings.tokenFocusedField, content);
+            }
+            // Direct tinyMCE support.
+            else if (typeof(tinyMCE) != 'undefined' && tinyMCE.activeEditor) {
+              tinyMCE.activeEditor.execCommand('mceInsertContent', false, content);
+            }
+            // Direct CKEditor support. Only works if the field currently has focus,
+            // which is unusual since the dialog is open.
+            else if (typeof(CKEDITOR) != 'undefined' && CKEDITOR.currentInstance) {
+              CKEDITOR.currentInstance.insertHtml(content);
+            }
+            // Direct CodeMirror support.
+            else if (typeof(CodeMirror) != 'undefined' && drupalSettings.tokenFocusedField && $(drupalSettings.tokenFocusedField).parents('.CodeMirror').length) {
+              var editor = $(drupalSettings.tokenFocusedField).parents('.CodeMirror')[0].CodeMirror;
+              editor.replaceSelection(content);
+              editor.focus();
+            }
+            // WYSIWYG support, should work in all editors if available.
+            else if (Drupal.wysiwyg && Drupal.wysiwyg.activeId) {
+              Drupal.wysiwyg.instances[Drupal.wysiwyg.activeId].insert(content)
+            }
+            // CKeditor module support.
+            else if (typeof(CKEDITOR) != 'undefined' && typeof(Drupal.ckeditorActiveId) != 'undefined') {
+              CKEDITOR.instances[Drupal.ckeditorActiveId].insertHtml(content);
+            }
+            else if (drupalSettings.tokenFocusedField) {
+              insertAtCursor(drupalSettings.tokenFocusedField, content);
+            }
+            else if (drupalSettings.tokenFocusedCkeditor5) {
+              const editor = drupalSettings.tokenFocusedCkeditor5;
+              editor.model.change((writer) => {
+                writer.insertText(
+                    content,
+                    editor.model.document.selection.getFirstPosition(),
+                );
+              })
+            }
+            else {
+              alert(Drupal.t('First click a text field to insert your tokens into.'));
+            }
+  
+            return false;
+          });
+        }
         $(token).html(newThis);
       });