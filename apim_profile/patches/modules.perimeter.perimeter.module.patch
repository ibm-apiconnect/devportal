--- modules/perimeter/perimeter.module	2021-07-26 10:47:19.000000000 +0100
+++ modules/perimeter/perimeter.module	2021-07-26 10:51:02.000000000 +0100
@@ -2,22 +2,35 @@
 use Drupal\Core\Database\Database;
 use Drupal\ban\BanIpManager;
 use Drupal\Component\Utility\Xss;
+use Drupal\Core\Site\Settings;
 
 function perimeter_honeypot_reject($form_id, $uid, $type){
   // Honeypot might remove the uid param at some point later.
   $uid = \Drupal::currentUser()->id();
-  if($uid != 1 && ($type=='honeypot_time' && $form_id != 'user_login_form')){
+  $whitelist = Settings::get('reverse_proxy_addresses', []) ;
+  if($uid != 1 && ($type=='honeypot_time' && $form_id != 'user_login_form') && (bool)\Drupal::state()->get('ibm_apim.ip_ban_enabled', true)){
     $ip = \Drupal::request()->getClientIp();
-    $connection = Database::getConnection();
-    $banManager = new BanIpManager($connection);
-    $banManager->banIp($ip);
-    \Drupal::logger('Perimeter')->notice('Banned: %ip for failing %type on %form <br />Source: %source <br /> User Agent: %browser',
-      [
-        '%ip' => $ip,
-        '%type' => $type,
-        '%form' => Xss::filter($form_id),
-        '%source' => isset($_SERVER['HTTP_REFERER']) ? Xss::filter($_SERVER['HTTP_REFERER']) : '',
-        '%browser' => isset($_SERVER['HTTP_USER_AGENT']) ? Xss::filter($_SERVER['HTTP_USER_AGENT']) : '',
-      ]);
+    if (in_array($ip, $whitelist, TRUE)) {
+      \Drupal::logger('Perimeter')->notice('Allowlist skipping ban: %ip for failing %type on %form <br />Source: %source <br /> User Agent: %browser',
+        [
+          '%ip' => $ip,
+          '%type' => $type,
+          '%form' => Xss::filter($form_id),
+          '%source' => isset($_SERVER['HTTP_REFERER']) ? Xss::filter($_SERVER['HTTP_REFERER']) : '',
+          '%browser' => isset($_SERVER['HTTP_USER_AGENT']) ? Xss::filter($_SERVER['HTTP_USER_AGENT']) : '',
+        ]);
+    } else {
+      $connection = Database::getConnection();
+      $banManager = new BanIpManager($connection);
+      $banManager->banIp($ip);
+      \Drupal::logger('Perimeter')->notice('Banned: %ip for failing %type on %form <br />Source: %source <br /> User Agent: %browser',
+        [
+          '%ip' => $ip,
+          '%type' => $type,
+          '%form' => Xss::filter($form_id),
+          '%source' => isset($_SERVER['HTTP_REFERER']) ? Xss::filter($_SERVER['HTTP_REFERER']) : '',
+          '%browser' => isset($_SERVER['HTTP_USER_AGENT']) ? Xss::filter($_SERVER['HTTP_USER_AGENT']) : '',
+        ]);
+    }
   }
 }
