diff --git modules/maintenance200/maintenance200.info.yml modules/maintenance200/maintenance200.info.yml
index fa88b4e..9e81116 100755
--- modules/maintenance200/maintenance200.info.yml
+++ modules/maintenance200/maintenance200.info.yml
@@ -1,6 +1,5 @@
 name: 'Maintenance 200'
 type: module
 description: 'Allows the maintenance page to return a configurable HTTP status code rather than the standard 503 code.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 configure: maintenance200_settings
diff --git modules/maintenance200/src/EventSubscriber/MaintenanceModeSubscriber.php modules/maintenance200/src/EventSubscriber/MaintenanceModeSubscriber.php
index 6515860..adaddf8 100644
--- modules/maintenance200/src/EventSubscriber/MaintenanceModeSubscriber.php
+++ modules/maintenance200/src/EventSubscriber/MaintenanceModeSubscriber.php
@@ -2,11 +2,10 @@

 namespace Drupal\maintenance200\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;

 use Drupal\Core\Site\MaintenanceModeInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -29,7 +28,7 @@ class MaintenanceModeSubscriber implements EventSubscriberInterface {
    * Respond to RESPONSE Kernel event by setting status code if in maintenance.
    *
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     if ($this->config->get('maintenance200_enabled')) {
       $status_code = $this->config->get('maintenance200_status_code');
       $request = $event->getRequest();
diff --git modules/maintenance200/tests/src/Functional/Maintenance200SettingsTest.php modules/maintenance200/tests/src/Functional/Maintenance200SettingsTest.php
index 044f2f9..1869431 100644
--- modules/maintenance200/tests/src/Functional/Maintenance200SettingsTest.php
+++ modules/maintenance200/tests/src/Functional/Maintenance200SettingsTest.php
@@ -20,7 +20,7 @@ class Maintenance200SettingsTest extends BrowserTestBase {
    *
    * @var array
    */
-  public static $modules = [
+  protected static $modules = [
     'block',
     'maintenance200',
   ];
@@ -40,7 +40,7 @@ class Maintenance200SettingsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->sut = $this
@@ -57,8 +57,8 @@ class Maintenance200SettingsTest extends BrowserTestBase {
    */
   public function testSettingsForm() {
     $this->drupalGet(Url::fromRoute('maintenance200_settings'));
-    $this->assertRaw('Change the status code during maintenance mode', 'Checkbox found.');
-    $this->assertFieldByName('maintenance200_enabled', TRUE);
+    $this->assertSession()->responseContains('Change the status code during maintenance mode');
+    $this->assertSession()->fieldValueEquals('maintenance200_enabled', TRUE);
   }

   /**
@@ -68,7 +68,7 @@ class Maintenance200SettingsTest extends BrowserTestBase {
     $maintenance200FormUrl = Url::fromRoute('maintenance200_settings')
       ->toString();
     $this->drupalGet(Url::fromRoute('system.site_maintenance_mode'));
-    $this->assertLinkByHref($maintenance200FormUrl);
+    $this->assertSession()->linkByHrefExists($maintenance200FormUrl);
   }

   /**
@@ -80,12 +80,13 @@ class Maintenance200SettingsTest extends BrowserTestBase {
     $edit = [
       'maintenance200_enabled' => 0,
     ];
-    $this->drupalPostForm('admin/config/development/maintenance200', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/development/maintenance200');
+    $this->submitForm($edit, t('Save configuration'));

-    $this->assertRaw('The configuration options have been saved.', 'Settings saved.');
+    $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->drupalGet(Url::fromRoute('maintenance200_settings'));
-    $this->assertFieldByName('maintenance200_enabled', FALSE);
+    $this->assertSession()->fieldValueEquals('maintenance200_enabled', FALSE);
   }

 }
diff --git modules/maintenance200/tests/src/Functional/Maintenance200Test.php modules/maintenance200/tests/src/Functional/Maintenance200Test.php
index 8a3d39e..238ea14 100644
--- modules/maintenance200/tests/src/Functional/Maintenance200Test.php
+++ modules/maintenance200/tests/src/Functional/Maintenance200Test.php
@@ -19,7 +19,7 @@ class Maintenance200Test extends BrowserTestBase {
    *
    * @var array
    */
-  public static $modules = [
+  protected static $modules = [
     'maintenance200',
     'node',
   ];
@@ -32,7 +32,7 @@ class Maintenance200Test extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create Basic page node type.
@@ -63,7 +63,7 @@ class Maintenance200Test extends BrowserTestBase {
     \Drupal::state()->set('system.maintenance_mode', FALSE);

     $this->drupalGet('<front>');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

   /**
@@ -81,7 +81,7 @@ class Maintenance200Test extends BrowserTestBase {
       ->save();

     $this->drupalGet('<front>');
-    $this->assertResponse(503);
+    $this->assertSession()->statusCodeEquals(503);
   }

   /**
@@ -99,7 +99,7 @@ class Maintenance200Test extends BrowserTestBase {
       ->save();

     $this->drupalGet('<front>');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

   /**
@@ -117,7 +117,7 @@ class Maintenance200Test extends BrowserTestBase {
       ->save();

     $this->drupalGet('<front>');
-    $this->assertResponse(418);
+    $this->assertSession()->statusCodeEquals(418);
   }

 }
