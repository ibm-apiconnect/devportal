--- modules/content_synchronizer/src/Processors/Entity/EntityProcessorBase.php  2023-07-12 16:00:08
+++ modules/content_synchronizer/src/Processors/Entity/EntityProcessorBase.php     2023-07-12 16:00:35
@@ -233,6 +233,7 @@
       if (!empty($dataToExport)) {
         $entityToExport->contentSynchronizerGid = $dataToExport[ExportEntityWriter::FIELD_GID] = $gid;
         $dataToExport[ExportEntityWriter::FIELD_UUID] = $entityToExport->uuid();
+        $dataToExport[ExportEntityWriter::FIELD_BUNDLE] = $entityToExport->bundle();
         ExportProcessor::getCurrentExportProcessor()
           ->getWriter()
           ->write($entityToExport, $dataToExport);
@@ -269,6 +270,11 @@
           ->getDefinition($entityTypeId);
       $bundleKey = $entityDefinition->getKey('bundle');
       $bundle = $defaultData[$bundleKey];
+      // Sometimes the bundle is stored in an array of objects with the key as value.
+      // If we see an array try and get the string value stored in value
+      if (is_array($bundle)) {
+        $bundle = isset($bundle[0]->value) ? $bundle[0]->value : $data[ExportEntityWriter::FIELD_BUNDLE];
+      }

       // Get field definitions.
       $fieldDefinitions = $this->entityFieldManager
@@ -347,6 +353,7 @@
   final public function import(array $dataToImport) {
     $gid = $dataToImport[ExportEntityWriter::FIELD_GID];
     $uuid = $dataToImport[ExportEntityWriter::FIELD_UUID];
+    $bundle = $dataToImport[ExportEntityWriter::FIELD_BUNDLE];

     // If the entity has already been imported, we don't have to do it again.
     $import = ImportProcessor::getCurrentImportProcessor()->getImport();
@@ -359,10 +366,10 @@
       ->getImport()
       ->tagHasImporting($gid);

+    $existingEntity = $this->getGlobalReferenceManager()->getExistingEntityByGidAndUuid($gid, $uuid, $bundle);
     // Get the previous entity by gid.
-    if ($existingEntity = $this->getGlobalReferenceManager()
-      ->getExistingEntityByGidAndUuid($gid, $uuid)
-    ) {
+    if(!empty($existingEntity) && $existingEntity[0]) {
+      $existingEntity = $existingEntity[0];
       if ($existingEntity) {
         $backup = clone($existingEntity);
       }
@@ -666,7 +673,7 @@
    *   The entity processor manager service.
    */
   protected function getEntityProcessorManager() {
-    return $this->entityProcessorManager;
+    return $this->entityProcessorPluginManager;
   }

   /**
@@ -697,7 +704,6 @@
     $this->propertyIdsNotToImport = array_merge(
       $this->propertyIdsNotToExport,
       [
-        $definition->getKey('uuid'),
         $definition->getKey('default_langcode'),
         $definition->getKey('revision_translation_affected'),
       ]
