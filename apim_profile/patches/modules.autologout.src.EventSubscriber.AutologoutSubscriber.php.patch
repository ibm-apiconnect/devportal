--- modules/autologout/src/EventSubscriber/AutologoutSubscriber.php
+++ modules/autologout/src/EventSubscriber/AutologoutSubscriber.php
@@ -133,25 +133,29 @@ class AutologoutSubscriber implements EventSubscriberInterface {
       // If http referer url has 'destination' and session is not set,
       // then only redirect to user page if uid dosen't match.
       if ($parse_url !== NULL && (strpos($parse_url, 'destination') !== FALSE) && empty($auto_redirect)) {
-        parse_str($parse_url, $output);
-        $destination_uid = explode("/", $output['destination']);
-
-        // If array contains language code, remove it.
-        $languagecode = $this->languageManager->getCurrentLanguage()->getId();
-        if ($destination_uid[1] === $languagecode) {
-          unset($destination_uid[1]);
-          $destination_uid = array_values($destination_uid);
-        }
-
-        // If destination uid and actual uid does not match then,
-        // redirect to loggedin user page.
-        if (($destination_uid[1] == "user") && ($destination_uid[2] != $uid)) {
-          $auto_redirect = $session->set('auto_redirect', 1);
-          $login_url = Url::fromRoute('user.page', [], ['absolute' => TRUE])->toString();
-
-          // Redirect user to user page.
-          $response = new RedirectResponse($login_url);
-          $event->setResponse($response);
+        if(isset($output['destination'])) {
+          parse_str($parse_url, $output);
+          $destination_uid = explode("/", $output['destination']);
+
+          // If array contains language code, remove it.
+          $languagecode = $this->languageManager->getCurrentLanguage()->getId();
+          if ($destination_uid[1] === $languagecode) {
+            unset($destination_uid[1]);
+            $destination_uid = array_values($destination_uid);
+          }
+
+          // If destination uid and actual uid does not match then,
+          // redirect to loggedin user page.
+          if(isset($destination_uid[2])) {
+            if (($destination_uid[1] == "user") && ($destination_uid[2] != $uid)) {
+              $auto_redirect = $session->set('auto_redirect', 1);
+              $login_url = Url::fromRoute('user.page', [], ['absolute' => TRUE])->toString();
+
+              // Redirect user to user page.
+              $response = new RedirectResponse($login_url);
+              $event->setResponse($response);
+            }
+          }
         }
       }
     }