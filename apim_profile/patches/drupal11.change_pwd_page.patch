--- modules/change_pwd_page/change_pwd_page.info.yml    2024-09-03 12:43:39
+++ modules/change_pwd_page/change_pwd_page.info.yml       2024-09-03 15:51:09
@@ -6,5 +6,5 @@
   - user

 # Information added by Drupal.org packaging script on 2016-10-28
-core_version_requirement: ^8 || ^9 || ^10
+core_version_requirement: ^8 || ^9 || ^10 || ^11
 datestamp: 1470233791

--- modules/change_pwd_page/src/Form/ChangePasswordForm.php
+++ modules/change_pwd_page/src/Form/ChangePasswordForm.php
@@ -9,6 +9,8 @@
 use Drupal\Core\Url;
 use Drupal\Core\Password\PasswordInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
+use Drupal\user\Entity\Role;
+use Drupal\user\RoleInterface;

 /**
  * Provides a user password reset form.
@@ -124,8 +126,18 @@
         }
       }

+      $form['account']['name'] = [
+        '#type' => 'hidden',
+        '#value' => $account->getAccountName(),
+      ];
+
       // This should never show. The data is needed by other modules.
-      $roles = array_map(['\Drupal\Component\Utility\Html', 'escape'], user_role_names(TRUE));
+      $loaded_roles = Role::loadMultiple();
+      unset($loaded_roles[RoleInterface::ANONYMOUS_ID]);
+      $role_names = array_map(function ($item) {
+        return $item->label();
+      }, $loaded_roles);
+      $roles = array_map(['\Drupal\Component\Utility\Html', 'escape'], $role_names);
       $form['account']['roles'] = [
         '#type' => 'checkboxes',
         '#title' => $this->t('Roles'),
@@ -145,7 +157,7 @@
    * {@inheritdoc}
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
-    $current_pass_input = trim($form_state->getValue('current_pass'));
+    $current_pass_input = trim($form_state->getValue('current_pass') ?? "");
     if ($current_pass_input) {
       $user = User::load(\Drupal::currentUser()->id());
       if (!$this->passwordHasher->check($current_pass_input, $user->getPassword())) {
@@ -159,6 +171,7 @@
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $user = $form_state->getFormObject()->getEntity();
+    $user->setUsername($form_state->getValue('name'));
     $user->setPassword($form_state->getValue('pass'));
     $user->save();
     $this->messenger()->addStatus($this->t('Your password has been changed.'));
